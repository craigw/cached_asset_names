CachedAssetNames
================

Caching is King as they say, but if you cache your static assets and deploy
new versions of them then some proxy servers such as Squid won't be able to
use Rails built-in cache busting to detect new versions.

This plugin rewrites stylesheet, image and javascript asset paths constructed
by Rails so that the proxies do detect new versions.

Example
=======

If you're using Apache you'll want to add something like this to your virtual
host configuration.

  RewriteEngine On

  <LocationMatch "^/(images|javascripts|stylesheets)/.*$">
    # The Last-Modified time has the same effect as an ETag here
    # so let's not waste bytes in the request/response.
    #
    Header unset ETag
    FileETag None
  </LocationMatch>

  # We use cached-busting location names with the far-future expires headers
  # to ensure that if a file does change it can force a new request. The actual
  # filenames are still the same though so we need to rewrite the location.
  #
  RewriteRule ^/(images|javascripts|stylesheets)/(.*)-v\d+\.(.*)$ /$1/$2.$3 [L]

  <LocationMatch "^/(images|javascripts|stylesheets)/(.*)-v\d+\.(.*)$">
    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header even if the asset hasn't reached the expiry
    # date set in the Expires header yet.
    #
    Header unset Last-Modified

    # Assets requested using a cache-busting filename should be served only once
    # and then cached for A BILLION YEARS. The HTTP/1.1 spec frowns on that though
    # and suggestst that assets which never expire be served with a 1 year
    # expiration date
    #
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
  </LocationMatch>

Beyond that you just need to have this plugin in your Rails vendor/plugins.

Authors
=======
Craig R Webster <http://barkingiguana.com/~craig>

Copyright (c) 2009 Craig R Webster, released under the MIT license
